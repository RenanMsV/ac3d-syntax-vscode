name: DEPLOY # Package, release, publish

on:
  workflow_dispatch:   # allows manual trigger
  push:
    branches:
      - master         # runs only after code is merged into main

jobs:
  deploy:
    runs-on: ubuntu-latest
    environment: PROD
    # Run only if commit message starts with "release:"
    # Or manually run
    if: >
      startsWith(github.event.head_commit.message, 'release:') ||
      github.event_name == 'workflow_dispatch'

    steps:
    - uses: actions/checkout@v5
    - uses: actions/setup-node@v4
      with:
        node-version: 20
        cache: 'npm'

    - run: npm ci
    - run: npm run package

    - name: Pre-Release
      run: |
        VSIX_FILE=$(echo *.vsix)
        BASENAME=$(basename "$VSIX_FILE" .vsix)
        NAME=${BASENAME%-*}
        VERSION=${BASENAME##*-}
        SHA256=$(sha256sum "$VSIX_FILE" | awk '{ print $1 }')
        COMMIT_HASH=$(git rev-parse --short HEAD)

        echo "ext_name=$NAME" >> $GITHUB_ENV
        echo "ext_version=$VERSION" >> $GITHUB_ENV
        echo "ext_zip_name=$VSIX_FILE" >> $GITHUB_ENV
        echo "sha256=$SHA256" >> $GITHUB_ENV
        echo "commit_hash=$COMMIT_HASH" >> $GITHUB_ENV
        echo "release_tag_name=$VERSION" >> $GITHUB_ENV
        echo "release_name=$VERSION" >> $GITHUB_ENV

    - name: Publish to Open VSX Registry
      uses: HaaLeo/publish-vscode-extension@v2
      id: publishToOpenVSX
      with:
        pat: ${{ secrets.OPEN_VSX_TOKEN }}
        extensionFile: ${{ env.ext_zip_name }}
    - name: Publish to Visual Studio Marketplace
      uses: HaaLeo/publish-vscode-extension@v2
      with:
        pat: ${{ secrets.VS_MARKETPLACE_TOKEN }}
        registryUrl: https://marketplace.visualstudio.com
        extensionFile: ${{ env.ext_zip_name }}

    - name: Create GitHub Release
      uses: softprops/action-gh-release@v2
      with:
        tag_name: ${{ env.release_tag_name }}
        name: "${{ env.release_name }}"
        body: |
          ðŸš€ Automatic release for version **${{ env.ext_version }}**
          ðŸ”– Commit: `${{ env.commit_hash }}`

          **SHA-256 checksum:** `${{ env.sha256 }}`

        draft: false
        prerelease: false
        files: ${{ env.ext_zip_name }}
        generate_release_notes: true
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
